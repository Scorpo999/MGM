### YamlMime:ManagedReference
items:
- uid: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer
  commentId: T:Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer
  id: InflictDamageEffectConsumer
  parent: Wayn.Mgm.Combat.Effects
  children:
  - Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.OnCreate
  - Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.ScheduleJob(NativeMultiHashMap{MapKey,EffectCommand}.Enumerator@,NativeHashMap{System.Int32,Wayn.Mgm.Combat.Effects.InflictDamageEffect}@)
  langs:
  - csharp
  - vb
  name: InflictDamageEffectConsumer
  nameWithType: InflictDamageEffectConsumer
  fullName: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer
  type: Class
  source:
    id: InflictDamageEffectConsumer
    path: ''
    startLine: 544
  assemblies:
  - cs.temp.dll
  namespace: Wayn.Mgm.Combat.Effects
  syntax:
    content: 'public class InflictDamageEffectConsumer : EffectConsumerSystem<InflictDamageEffect>'
    content.vb: >-
      Public Class InflictDamageEffectConsumer
          Inherits EffectConsumerSystem(Of InflictDamageEffect)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.ScheduleJob(NativeMultiHashMap{MapKey,EffectCommand}.Enumerator@,NativeHashMap{System.Int32,Wayn.Mgm.Combat.Effects.InflictDamageEffect}@)
  commentId: M:Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.ScheduleJob(NativeMultiHashMap{MapKey,EffectCommand}.Enumerator@,NativeHashMap{System.Int32,Wayn.Mgm.Combat.Effects.InflictDamageEffect}@)
  id: ScheduleJob(NativeMultiHashMap{MapKey,EffectCommand}.Enumerator@,NativeHashMap{System.Int32,Wayn.Mgm.Combat.Effects.InflictDamageEffect}@)
  parent: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer
  langs:
  - csharp
  - vb
  name: ScheduleJob(NativeMultiHashMap<MapKey, EffectCommand>.Enumerator, NativeHashMap<Int32, InflictDamageEffect>)
  nameWithType: InflictDamageEffectConsumer.ScheduleJob(NativeMultiHashMap<MapKey, EffectCommand>.Enumerator, NativeHashMap<Int32, InflictDamageEffect>)
  fullName: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.ScheduleJob(NativeMultiHashMap<MapKey, EffectCommand>.Enumerator, NativeHashMap<System.Int32, Wayn.Mgm.Combat.Effects.InflictDamageEffect>)
  type: Method
  source:
    id: ScheduleJob
    path: ''
    startLine: 549
  assemblies:
  - cs.temp.dll
  namespace: Wayn.Mgm.Combat.Effects
  syntax:
    content: protected override JobHandle ScheduleJob(in NativeMultiHashMap<MapKey, EffectCommand>.Enumerator EffectCommandEnumerator, in NativeHashMap<int, InflictDamageEffect> RegisteredEffects)
    parameters:
    - id: EffectCommandEnumerator
      type: Global.NativeMultiHashMap{MapKey,EffectCommand}.Enumerator
    - id: RegisteredEffects
      type: Global.NativeHashMap{System.Int32,Wayn.Mgm.Combat.Effects.InflictDamageEffect}
    return:
      type: Global.JobHandle
    content.vb: Protected Overrides Function ScheduleJob(ByRef EffectCommandEnumerator As NativeMultiHashMap(Of MapKey, EffectCommand).Enumerator, ByRef RegisteredEffects As NativeHashMap(Of Integer, InflictDamageEffect)) As JobHandle
  overload: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.ScheduleJob*
  nameWithType.vb: InflictDamageEffectConsumer.ScheduleJob(ByRef NativeMultiHashMap(Of MapKey, EffectCommand).Enumerator, ByRef NativeHashMap(Of Int32, InflictDamageEffect))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.ScheduleJob(ByRef NativeMultiHashMap(Of MapKey, EffectCommand).Enumerator, ByRef NativeHashMap(Of System.Int32, Wayn.Mgm.Combat.Effects.InflictDamageEffect))
  name.vb: ScheduleJob(ByRef NativeMultiHashMap(Of MapKey, EffectCommand).Enumerator, ByRef NativeHashMap(Of Int32, InflictDamageEffect))
- uid: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.OnCreate
  commentId: M:Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.OnCreate
  id: OnCreate
  parent: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer
  langs:
  - csharp
  - vb
  name: OnCreate()
  nameWithType: InflictDamageEffectConsumer.OnCreate()
  fullName: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.OnCreate()
  type: Method
  source:
    id: OnCreate
    path: ''
    startLine: 566
  assemblies:
  - cs.temp.dll
  namespace: Wayn.Mgm.Combat.Effects
  syntax:
    content: protected override void OnCreate()
    content.vb: Protected Overrides Sub OnCreate
  overload: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.OnCreate*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Wayn.Mgm.Combat.Effects
  commentId: N:Wayn.Mgm.Combat.Effects
  name: Wayn.Mgm.Combat.Effects
  nameWithType: Wayn.Mgm.Combat.Effects
  fullName: Wayn.Mgm.Combat.Effects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.ScheduleJob*
  commentId: Overload:Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.ScheduleJob
  name: ScheduleJob
  nameWithType: InflictDamageEffectConsumer.ScheduleJob
  fullName: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.ScheduleJob
- uid: Global.NativeMultiHashMap{MapKey,EffectCommand}.Enumerator
  isExternal: true
  name: NativeMultiHashMap.Enumerator<>
  nameWithType: NativeMultiHashMap.Enumerator<>
  fullName: NativeMultiHashMap.Enumerator<>
  nameWithType.vb: NativeMultiHashMap.Enumerator(Of )
  fullName.vb: NativeMultiHashMap.Enumerator(Of )
  name.vb: NativeMultiHashMap.Enumerator(Of )
  spec.csharp:
  - uid: Global.NativeMultiHashMap{MapKey,EffectCommand}.Enumerator
    name: NativeMultiHashMap.Enumerator
    nameWithType: NativeMultiHashMap.Enumerator
    fullName: NativeMultiHashMap.Enumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.NativeMultiHashMap{MapKey,EffectCommand}.Enumerator
    name: NativeMultiHashMap.Enumerator
    nameWithType: NativeMultiHashMap.Enumerator
    fullName: NativeMultiHashMap.Enumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.NativeHashMap{System.Int32,Wayn.Mgm.Combat.Effects.InflictDamageEffect}
  commentId: '!:Global.NativeHashMap{System.Int32,Wayn.Mgm.Combat.Effects.InflictDamageEffect}'
  definition: Global.NativeHashMap`2
  name: NativeHashMap<Int32, InflictDamageEffect>
  nameWithType: NativeHashMap<Int32, InflictDamageEffect>
  fullName: NativeHashMap<System.Int32, Wayn.Mgm.Combat.Effects.InflictDamageEffect>
  nameWithType.vb: NativeHashMap(Of Int32, InflictDamageEffect)
  fullName.vb: NativeHashMap(Of System.Int32, Wayn.Mgm.Combat.Effects.InflictDamageEffect)
  name.vb: NativeHashMap(Of Int32, InflictDamageEffect)
  spec.csharp:
  - uid: Global.NativeHashMap`2
    name: NativeHashMap
    nameWithType: NativeHashMap
    fullName: NativeHashMap
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Wayn.Mgm.Combat.Effects.InflictDamageEffect
    name: InflictDamageEffect
    nameWithType: InflictDamageEffect
    fullName: Wayn.Mgm.Combat.Effects.InflictDamageEffect
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.NativeHashMap`2
    name: NativeHashMap
    nameWithType: NativeHashMap
    fullName: NativeHashMap
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Wayn.Mgm.Combat.Effects.InflictDamageEffect
    name: InflictDamageEffect
    nameWithType: InflictDamageEffect
    fullName: Wayn.Mgm.Combat.Effects.InflictDamageEffect
  - name: )
    nameWithType: )
    fullName: )
- uid: Global.JobHandle
  isExternal: true
  name: JobHandle
  nameWithType: JobHandle
  fullName: JobHandle
- uid: Global.NativeHashMap`2
  isExternal: true
  name: NativeHashMap<, >
  nameWithType: NativeHashMap<, >
  fullName: NativeHashMap<, >
  nameWithType.vb: NativeHashMap(Of , )
  fullName.vb: NativeHashMap(Of , )
  name.vb: NativeHashMap(Of , )
  spec.csharp:
  - uid: Global.NativeHashMap`2
    name: NativeHashMap
    nameWithType: NativeHashMap
    fullName: NativeHashMap
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Global.NativeHashMap`2
    name: NativeHashMap
    nameWithType: NativeHashMap
    fullName: NativeHashMap
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.OnCreate*
  commentId: Overload:Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.OnCreate
  name: OnCreate
  nameWithType: InflictDamageEffectConsumer.OnCreate
  fullName: Wayn.Mgm.Combat.Effects.InflictDamageEffectConsumer.OnCreate
